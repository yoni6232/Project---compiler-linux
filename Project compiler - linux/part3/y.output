Terminals unused in grammar

   OCMNT
   SINMGLE_COMMENT
   CCMNT


State 45 conflicts: 8 shift/reduce
State 58 conflicts: 8 shift/reduce
State 59 conflicts: 8 shift/reduce


Grammar

    0 $accept: START $end

    1 START: PROGRAM

    2 PROGRAM: FUNCTIONS

    3 FUNCTIONS: FUNCTION FUNCTIONS
    4          | %empty

    5 FUNCTION: FUNC TYPE id OBRACKET F_PARAMS CBRACKET CODE_BLOCK
    6         | FUNC void id OBRACKET F_PARAMS CBRACKET CODE_BLOCK

    7 BODY: DECLERATIONS STATMENTS RETURN_STATMENT

    8 DECLERATIONS: FUNCTION DECLERATIONS
    9             | VAR_DECLERACTION STATMENTS DECLERATIONS
   10             | %empty

   11 F_PARAMS: F_PARAMSS
   12         | %empty

   13 F_PARAMSS: F_PARAMSS SEMI PARAM
   14          | PARAM

   15 PARAM: PARAM_TYPE IDS

   16 VAR_DECLERACTION: VAR TYPE IDS SEMI
   17                 | string SID SEMI
   18                 | VAR TYPE ASSIGNMENT

   19 IDS: id COMMA IDS
   20    | id

   21 SID: id OSQRERACKET EXPR CSQRERACKET STRING_ASSIGNMENT COMMA SID
   22    | id OSQRERACKET EXPR CSQRERACKET STRING_ASSIGNMENT

   23 PARAM_TYPE: TYPE
   24           | string

   25 TYPE: BOOL
   26     | CHAR
   27     | INT
   28     | REAL
   29     | INTP
   30     | CHARP
   31     | REALP

   32 STATMENTS: STATMENT STATMENTS
   33          | CODE_BLOCK STATMENTS
   34          | %empty

   35 STATMENT: ASSIGNMENT
   36         | FUNC_CALL SEMI
   37         | IFS
   38         | LOOPS

   39 CODE_BLOCK: OBRACE BODY CBRACE

   40 SINGLE_STATMENT: STATMENT

   41 ASSIGNMENT: ASSIGNMENT_VAR assign EXPR SEMI
   42           | BAND ASSIGNMENT_VAR assign EXPR SEMI
   43           | ASSIGNMENT_VAR assign BAND id OSQRERACKET EXPR CSQRERACKET SEMI
   44           | MULT ASSIGNMENT_VAR assign EXPR SEMI

   45 STRING_ASSIGNMENT: assign string_id
   46                  | %empty

   47 ASSIGNMENT_VAR: id
   48               | id OSQRERACKET EXPR CSQRERACKET

   49 FUNC_CALL: id OBRACKET EXPR_LIST CBRACKET
   50          | id OBRACKET CBRACKET

   51 IFS: IF OBRACKET EXPR CBRACKET CODE_BLOCK
   52    | IF OBRACKET EXPR CBRACKET CODE_BLOCK ELSE CODE_BLOCK
   53    | IF OBRACKET EXPR CBRACKET SINGLE_STATMENT
   54    | IF OBRACKET EXPR CBRACKET CODE_BLOCK ELSE SINGLE_STATMENT

   55 LOOPS: WHILE OBRACKET EXPR CBRACKET CODE_BLOCK
   56      | FOR OBRACKET ASSIGNMENT EXPR SEMI UPDATES CBRACKET CODE_BLOCK
   57      | WHILE OBRACKET EXPR CBRACKET SINGLE_STATMENT
   58      | FOR OBRACKET ASSIGNMENT EXPR SEMI UPDATES CBRACKET SINGLE_STATMENT
   59      | DO CODE_BLOCK WHILE OBRACKET EXPR CBRACKET SEMI

   60 UPDATES: id plus plus
   61        | plus plus id
   62        | id minus minus
   63        | minus minus id
   64        | id assign EXPR

   65 RETURN_STATMENT: RRETURN EXPR SEMI
   66                | RRETURN SEMI
   67                | %empty

   68 EXPR_LIST: EXPR_LIST COMMA EXPR
   69          | EXPR

   70 EXPR: EXPR PLUS EXPR
   71     | EXPR MINUS EXPR
   72     | EXPR MULT EXPR
   73     | EXPR DIVIDE EXPR
   74     | EXPR AND EXPR
   75     | EXPR OR EXPR
   76     | EXPR ISEQUAL EXPR
   77     | EXPR NOTEQUAL EXPR
   78     | EXPR GREATER EXPR
   79     | EXPR GREATEREQ EXPR
   80     | EXPR LESS EXPR
   81     | EXPR LESSEQ EXPR
   82     | NOT EXPR
   83     | MULT EXPR
   84     | MINUS EXPR
   85     | BAND id
   86     | NUMS
   87     | BOOL_TRUE
   88     | BOOL_FALSE
   89     | ASSIGNMENT_VAR
   90     | OBRACKET EXPR CBRACKET
   91     | ABS EXPR ABS
   92     | NNULL
   93     | FUNC_CALL
   94     | char
   95     | string_id

   96 NUMS: NUM
   97     | HEX
   98     | DEC
   99     | REAL_NUMBER

  100 id: ID

  101 assign: ASSIGN

  102 plus: PLUS

  103 minus: MINUS

  104 char: CHARR

  105 void: VOID

  106 string: STRING

  107 string_id: STRING_ID


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258) 25
VOID (259) 105
CHAR (260) 26
INT (261) 27
STRING (262) 106
INTP (263) 29
CHARP (264) 30
REALP (265) 31
REAL (266) 28
VAR (267) 16 18
IF (268) 51 52 53 54
ELSE (269) 52 54
WHILE (270) 55 57 59
DO (271) 59
FOR (272) 56 58
RRETURN (273) 65 66
NNULL (274) 92
AND (275) 74
DIVIDE (276) 73
ASSIGN (277) 101
ISEQUAL (278) 76
GREATER (279) 78
GREATEREQ (280) 79
LESS (281) 80
LESSEQ (282) 81
MINUS (283) 71 84 103
NOT (284) 82
NOTEQUAL (285) 77
OR (286) 75
PLUS (287) 70 102
MULT (288) 44 72 83
BAND (289) 42 43 85
BOOL_TRUE (290) 87
BOOL_FALSE (291) 88
FUNC (292) 5 6
CHARR (293) 104
NUM (294) 96
ID (295) 100
HEX (296) 97
DEC (297) 98
REAL_NUMBER (298) 99
STRING_ID (299) 107
SEMI (300) 13 16 17 36 41 42 43 44 56 58 59 65 66
COMMA (301) 19 21 68
ABS (302) 91
OBRACE (303) 39
CBRACE (304) 39
OBRACKET (305) 5 6 49 50 51 52 53 54 55 56 57 58 59 90
CBRACKET (306) 5 6 49 50 51 52 53 54 55 56 57 58 59 90
OSQRERACKET (307) 21 22 43 48
CSQRERACKET (308) 21 22 43 48
OCMNT (309)
SINMGLE_COMMENT (310)
CCMNT (311)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
START (58)
    on left: 1, on right: 0
PROGRAM (59)
    on left: 2, on right: 1
FUNCTIONS (60)
    on left: 3 4, on right: 2 3
FUNCTION (61)
    on left: 5 6, on right: 3 8
BODY (62)
    on left: 7, on right: 39
DECLERATIONS (63)
    on left: 8 9 10, on right: 7 8 9
F_PARAMS (64)
    on left: 11 12, on right: 5 6
F_PARAMSS (65)
    on left: 13 14, on right: 11 13
PARAM (66)
    on left: 15, on right: 13 14
VAR_DECLERACTION (67)
    on left: 16 17 18, on right: 9
IDS (68)
    on left: 19 20, on right: 15 16 19
SID (69)
    on left: 21 22, on right: 17 21
PARAM_TYPE (70)
    on left: 23 24, on right: 15
TYPE (71)
    on left: 25 26 27 28 29 30 31, on right: 5 16 18 23
STATMENTS (72)
    on left: 32 33 34, on right: 7 9 32 33
STATMENT (73)
    on left: 35 36 37 38, on right: 32 40
CODE_BLOCK (74)
    on left: 39, on right: 5 6 33 51 52 54 55 56 59
SINGLE_STATMENT (75)
    on left: 40, on right: 53 54 57 58
ASSIGNMENT (76)
    on left: 41 42 43 44, on right: 18 35 56 58
STRING_ASSIGNMENT (77)
    on left: 45 46, on right: 21 22
ASSIGNMENT_VAR (78)
    on left: 47 48, on right: 41 42 43 44 89
FUNC_CALL (79)
    on left: 49 50, on right: 36 93
IFS (80)
    on left: 51 52 53 54, on right: 37
LOOPS (81)
    on left: 55 56 57 58 59, on right: 38
UPDATES (82)
    on left: 60 61 62 63 64, on right: 56 58
RETURN_STATMENT (83)
    on left: 65 66 67, on right: 7
EXPR_LIST (84)
    on left: 68 69, on right: 49 68
EXPR (85)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    88 89 90 91 92 93 94 95, on right: 21 22 41 42 43 44 48 51 52 53
    54 55 56 57 58 59 64 65 68 69 70 71 72 73 74 75 76 77 78 79 80
    81 82 83 84 90 91
NUMS (86)
    on left: 96 97 98 99, on right: 86
id (87)
    on left: 100, on right: 5 6 19 20 21 22 43 47 48 49 50 60 61 62
    63 64 85
assign (88)
    on left: 101, on right: 41 42 43 44 45 64
plus (89)
    on left: 102, on right: 60 61
minus (90)
    on left: 103, on right: 62 63
char (91)
    on left: 104, on right: 94
void (92)
    on left: 105, on right: 6
string (93)
    on left: 106, on right: 17 24
string_id (94)
    on left: 107, on right: 45 95


State 0

    0 $accept: . START $end

    FUNC  shift, and go to state 1

    $default  reduce using rule 4 (FUNCTIONS)

    START      go to state 2
    PROGRAM    go to state 3
    FUNCTIONS  go to state 4
    FUNCTION   go to state 5


State 1

    5 FUNCTION: FUNC . TYPE id OBRACKET F_PARAMS CBRACKET CODE_BLOCK
    6         | FUNC . void id OBRACKET F_PARAMS CBRACKET CODE_BLOCK

    BOOL   shift, and go to state 6
    VOID   shift, and go to state 7
    CHAR   shift, and go to state 8
    INT    shift, and go to state 9
    INTP   shift, and go to state 10
    CHARP  shift, and go to state 11
    REALP  shift, and go to state 12
    REAL   shift, and go to state 13

    TYPE  go to state 14
    void  go to state 15


State 2

    0 $accept: START . $end

    $end  shift, and go to state 16


State 3

    1 START: PROGRAM .

    $default  reduce using rule 1 (START)


State 4

    2 PROGRAM: FUNCTIONS .

    $default  reduce using rule 2 (PROGRAM)


State 5

    3 FUNCTIONS: FUNCTION . FUNCTIONS

    FUNC  shift, and go to state 1

    $default  reduce using rule 4 (FUNCTIONS)

    FUNCTIONS  go to state 17
    FUNCTION   go to state 5


State 6

   25 TYPE: BOOL .

    $default  reduce using rule 25 (TYPE)


State 7

  105 void: VOID .

    $default  reduce using rule 105 (void)


State 8

   26 TYPE: CHAR .

    $default  reduce using rule 26 (TYPE)


State 9

   27 TYPE: INT .

    $default  reduce using rule 27 (TYPE)


State 10

   29 TYPE: INTP .

    $default  reduce using rule 29 (TYPE)


State 11

   30 TYPE: CHARP .

    $default  reduce using rule 30 (TYPE)


State 12

   31 TYPE: REALP .

    $default  reduce using rule 31 (TYPE)


State 13

   28 TYPE: REAL .

    $default  reduce using rule 28 (TYPE)


State 14

    5 FUNCTION: FUNC TYPE . id OBRACKET F_PARAMS CBRACKET CODE_BLOCK

    ID  shift, and go to state 18

    id  go to state 19


State 15

    6 FUNCTION: FUNC void . id OBRACKET F_PARAMS CBRACKET CODE_BLOCK

    ID  shift, and go to state 18

    id  go to state 20


State 16

    0 $accept: START $end .

    $default  accept


State 17

    3 FUNCTIONS: FUNCTION FUNCTIONS .

    $default  reduce using rule 3 (FUNCTIONS)


State 18

  100 id: ID .

    $default  reduce using rule 100 (id)


State 19

    5 FUNCTION: FUNC TYPE id . OBRACKET F_PARAMS CBRACKET CODE_BLOCK

    OBRACKET  shift, and go to state 21


State 20

    6 FUNCTION: FUNC void id . OBRACKET F_PARAMS CBRACKET CODE_BLOCK

    OBRACKET  shift, and go to state 22


State 21

    5 FUNCTION: FUNC TYPE id OBRACKET . F_PARAMS CBRACKET CODE_BLOCK

    BOOL    shift, and go to state 6
    CHAR    shift, and go to state 8
    INT     shift, and go to state 9
    STRING  shift, and go to state 23
    INTP    shift, and go to state 10
    CHARP   shift, and go to state 11
    REALP   shift, and go to state 12
    REAL    shift, and go to state 13

    $default  reduce using rule 12 (F_PARAMS)

    F_PARAMS    go to state 24
    F_PARAMSS   go to state 25
    PARAM       go to state 26
    PARAM_TYPE  go to state 27
    TYPE        go to state 28
    string      go to state 29


State 22

    6 FUNCTION: FUNC void id OBRACKET . F_PARAMS CBRACKET CODE_BLOCK

    BOOL    shift, and go to state 6
    CHAR    shift, and go to state 8
    INT     shift, and go to state 9
    STRING  shift, and go to state 23
    INTP    shift, and go to state 10
    CHARP   shift, and go to state 11
    REALP   shift, and go to state 12
    REAL    shift, and go to state 13

    $default  reduce using rule 12 (F_PARAMS)

    F_PARAMS    go to state 30
    F_PARAMSS   go to state 25
    PARAM       go to state 26
    PARAM_TYPE  go to state 27
    TYPE        go to state 28
    string      go to state 29


State 23

  106 string: STRING .

    $default  reduce using rule 106 (string)


State 24

    5 FUNCTION: FUNC TYPE id OBRACKET F_PARAMS . CBRACKET CODE_BLOCK

    CBRACKET  shift, and go to state 31


State 25

   11 F_PARAMS: F_PARAMSS .
   13 F_PARAMSS: F_PARAMSS . SEMI PARAM

    SEMI  shift, and go to state 32

    $default  reduce using rule 11 (F_PARAMS)


State 26

   14 F_PARAMSS: PARAM .

    $default  reduce using rule 14 (F_PARAMSS)


State 27

   15 PARAM: PARAM_TYPE . IDS

    ID  shift, and go to state 18

    IDS  go to state 33
    id   go to state 34


State 28

   23 PARAM_TYPE: TYPE .

    $default  reduce using rule 23 (PARAM_TYPE)


State 29

   24 PARAM_TYPE: string .

    $default  reduce using rule 24 (PARAM_TYPE)


State 30

    6 FUNCTION: FUNC void id OBRACKET F_PARAMS . CBRACKET CODE_BLOCK

    CBRACKET  shift, and go to state 35


State 31

    5 FUNCTION: FUNC TYPE id OBRACKET F_PARAMS CBRACKET . CODE_BLOCK

    OBRACE  shift, and go to state 36

    CODE_BLOCK  go to state 37


State 32

   13 F_PARAMSS: F_PARAMSS SEMI . PARAM

    BOOL    shift, and go to state 6
    CHAR    shift, and go to state 8
    INT     shift, and go to state 9
    STRING  shift, and go to state 23
    INTP    shift, and go to state 10
    CHARP   shift, and go to state 11
    REALP   shift, and go to state 12
    REAL    shift, and go to state 13

    PARAM       go to state 38
    PARAM_TYPE  go to state 27
    TYPE        go to state 28
    string      go to state 29


State 33

   15 PARAM: PARAM_TYPE IDS .

    $default  reduce using rule 15 (PARAM)


State 34

   19 IDS: id . COMMA IDS
   20    | id .

    COMMA  shift, and go to state 39

    $default  reduce using rule 20 (IDS)


State 35

    6 FUNCTION: FUNC void id OBRACKET F_PARAMS CBRACKET . CODE_BLOCK

    OBRACE  shift, and go to state 36

    CODE_BLOCK  go to state 40


State 36

   39 CODE_BLOCK: OBRACE . BODY CBRACE

    STRING  shift, and go to state 23
    VAR     shift, and go to state 41
    FUNC    shift, and go to state 1

    $default  reduce using rule 10 (DECLERATIONS)

    FUNCTION          go to state 42
    BODY              go to state 43
    DECLERATIONS      go to state 44
    VAR_DECLERACTION  go to state 45
    string            go to state 46


State 37

    5 FUNCTION: FUNC TYPE id OBRACKET F_PARAMS CBRACKET CODE_BLOCK .

    $default  reduce using rule 5 (FUNCTION)


State 38

   13 F_PARAMSS: F_PARAMSS SEMI PARAM .

    $default  reduce using rule 13 (F_PARAMSS)


State 39

   19 IDS: id COMMA . IDS

    ID  shift, and go to state 18

    IDS  go to state 47
    id   go to state 34


State 40

    6 FUNCTION: FUNC void id OBRACKET F_PARAMS CBRACKET CODE_BLOCK .

    $default  reduce using rule 6 (FUNCTION)


State 41

   16 VAR_DECLERACTION: VAR . TYPE IDS SEMI
   18                 | VAR . TYPE ASSIGNMENT

    BOOL   shift, and go to state 6
    CHAR   shift, and go to state 8
    INT    shift, and go to state 9
    INTP   shift, and go to state 10
    CHARP  shift, and go to state 11
    REALP  shift, and go to state 12
    REAL   shift, and go to state 13

    TYPE  go to state 48


State 42

    8 DECLERATIONS: FUNCTION . DECLERATIONS

    STRING  shift, and go to state 23
    VAR     shift, and go to state 41
    FUNC    shift, and go to state 1

    $default  reduce using rule 10 (DECLERATIONS)

    FUNCTION          go to state 42
    DECLERATIONS      go to state 49
    VAR_DECLERACTION  go to state 45
    string            go to state 46


State 43

   39 CODE_BLOCK: OBRACE BODY . CBRACE

    CBRACE  shift, and go to state 50


State 44

    7 BODY: DECLERATIONS . STATMENTS RETURN_STATMENT

    IF      shift, and go to state 51
    WHILE   shift, and go to state 52
    DO      shift, and go to state 53
    FOR     shift, and go to state 54
    MULT    shift, and go to state 55
    BAND    shift, and go to state 56
    ID      shift, and go to state 18
    OBRACE  shift, and go to state 36

    $default  reduce using rule 34 (STATMENTS)

    STATMENTS       go to state 57
    STATMENT        go to state 58
    CODE_BLOCK      go to state 59
    ASSIGNMENT      go to state 60
    ASSIGNMENT_VAR  go to state 61
    FUNC_CALL       go to state 62
    IFS             go to state 63
    LOOPS           go to state 64
    id              go to state 65


State 45

    9 DECLERATIONS: VAR_DECLERACTION . STATMENTS DECLERATIONS

    IF      shift, and go to state 51
    WHILE   shift, and go to state 52
    DO      shift, and go to state 53
    FOR     shift, and go to state 54
    MULT    shift, and go to state 55
    BAND    shift, and go to state 56
    ID      shift, and go to state 18
    OBRACE  shift, and go to state 36

    IF        [reduce using rule 34 (STATMENTS)]
    WHILE     [reduce using rule 34 (STATMENTS)]
    DO        [reduce using rule 34 (STATMENTS)]
    FOR       [reduce using rule 34 (STATMENTS)]
    MULT      [reduce using rule 34 (STATMENTS)]
    BAND      [reduce using rule 34 (STATMENTS)]
    ID        [reduce using rule 34 (STATMENTS)]
    OBRACE    [reduce using rule 34 (STATMENTS)]
    $default  reduce using rule 34 (STATMENTS)

    STATMENTS       go to state 66
    STATMENT        go to state 58
    CODE_BLOCK      go to state 59
    ASSIGNMENT      go to state 60
    ASSIGNMENT_VAR  go to state 61
    FUNC_CALL       go to state 62
    IFS             go to state 63
    LOOPS           go to state 64
    id              go to state 65


State 46

   17 VAR_DECLERACTION: string . SID SEMI

    ID  shift, and go to state 18

    SID  go to state 67
    id   go to state 68


State 47

   19 IDS: id COMMA IDS .

    $default  reduce using rule 19 (IDS)


State 48

   16 VAR_DECLERACTION: VAR TYPE . IDS SEMI
   18                 | VAR TYPE . ASSIGNMENT

    MULT  shift, and go to state 55
    BAND  shift, and go to state 56
    ID    shift, and go to state 18

    IDS             go to state 69
    ASSIGNMENT      go to state 70
    ASSIGNMENT_VAR  go to state 61
    id              go to state 71


State 49

    8 DECLERATIONS: FUNCTION DECLERATIONS .

    $default  reduce using rule 8 (DECLERATIONS)


State 50

   39 CODE_BLOCK: OBRACE BODY CBRACE .

    $default  reduce using rule 39 (CODE_BLOCK)


State 51

   51 IFS: IF . OBRACKET EXPR CBRACKET CODE_BLOCK
   52    | IF . OBRACKET EXPR CBRACKET CODE_BLOCK ELSE CODE_BLOCK
   53    | IF . OBRACKET EXPR CBRACKET SINGLE_STATMENT
   54    | IF . OBRACKET EXPR CBRACKET CODE_BLOCK ELSE SINGLE_STATMENT

    OBRACKET  shift, and go to state 72


State 52

   55 LOOPS: WHILE . OBRACKET EXPR CBRACKET CODE_BLOCK
   57      | WHILE . OBRACKET EXPR CBRACKET SINGLE_STATMENT

    OBRACKET  shift, and go to state 73


State 53

   59 LOOPS: DO . CODE_BLOCK WHILE OBRACKET EXPR CBRACKET SEMI

    OBRACE  shift, and go to state 36

    CODE_BLOCK  go to state 74


State 54

   56 LOOPS: FOR . OBRACKET ASSIGNMENT EXPR SEMI UPDATES CBRACKET CODE_BLOCK
   58      | FOR . OBRACKET ASSIGNMENT EXPR SEMI UPDATES CBRACKET SINGLE_STATMENT

    OBRACKET  shift, and go to state 75


State 55

   44 ASSIGNMENT: MULT . ASSIGNMENT_VAR assign EXPR SEMI

    ID  shift, and go to state 18

    ASSIGNMENT_VAR  go to state 76
    id              go to state 77


State 56

   42 ASSIGNMENT: BAND . ASSIGNMENT_VAR assign EXPR SEMI

    ID  shift, and go to state 18

    ASSIGNMENT_VAR  go to state 78
    id              go to state 77


State 57

    7 BODY: DECLERATIONS STATMENTS . RETURN_STATMENT

    RRETURN  shift, and go to state 79

    $default  reduce using rule 67 (RETURN_STATMENT)

    RETURN_STATMENT  go to state 80


State 58

   32 STATMENTS: STATMENT . STATMENTS

    IF      shift, and go to state 51
    WHILE   shift, and go to state 52
    DO      shift, and go to state 53
    FOR     shift, and go to state 54
    MULT    shift, and go to state 55
    BAND    shift, and go to state 56
    ID      shift, and go to state 18
    OBRACE  shift, and go to state 36

    IF        [reduce using rule 34 (STATMENTS)]
    WHILE     [reduce using rule 34 (STATMENTS)]
    DO        [reduce using rule 34 (STATMENTS)]
    FOR       [reduce using rule 34 (STATMENTS)]
    MULT      [reduce using rule 34 (STATMENTS)]
    BAND      [reduce using rule 34 (STATMENTS)]
    ID        [reduce using rule 34 (STATMENTS)]
    OBRACE    [reduce using rule 34 (STATMENTS)]
    $default  reduce using rule 34 (STATMENTS)

    STATMENTS       go to state 81
    STATMENT        go to state 58
    CODE_BLOCK      go to state 59
    ASSIGNMENT      go to state 60
    ASSIGNMENT_VAR  go to state 61
    FUNC_CALL       go to state 62
    IFS             go to state 63
    LOOPS           go to state 64
    id              go to state 65


State 59

   33 STATMENTS: CODE_BLOCK . STATMENTS

    IF      shift, and go to state 51
    WHILE   shift, and go to state 52
    DO      shift, and go to state 53
    FOR     shift, and go to state 54
    MULT    shift, and go to state 55
    BAND    shift, and go to state 56
    ID      shift, and go to state 18
    OBRACE  shift, and go to state 36

    IF        [reduce using rule 34 (STATMENTS)]
    WHILE     [reduce using rule 34 (STATMENTS)]
    DO        [reduce using rule 34 (STATMENTS)]
    FOR       [reduce using rule 34 (STATMENTS)]
    MULT      [reduce using rule 34 (STATMENTS)]
    BAND      [reduce using rule 34 (STATMENTS)]
    ID        [reduce using rule 34 (STATMENTS)]
    OBRACE    [reduce using rule 34 (STATMENTS)]
    $default  reduce using rule 34 (STATMENTS)

    STATMENTS       go to state 82
    STATMENT        go to state 58
    CODE_BLOCK      go to state 59
    ASSIGNMENT      go to state 60
    ASSIGNMENT_VAR  go to state 61
    FUNC_CALL       go to state 62
    IFS             go to state 63
    LOOPS           go to state 64
    id              go to state 65


State 60

   35 STATMENT: ASSIGNMENT .

    $default  reduce using rule 35 (STATMENT)


State 61

   41 ASSIGNMENT: ASSIGNMENT_VAR . assign EXPR SEMI
   43           | ASSIGNMENT_VAR . assign BAND id OSQRERACKET EXPR CSQRERACKET SEMI

    ASSIGN  shift, and go to state 83

    assign  go to state 84


State 62

   36 STATMENT: FUNC_CALL . SEMI

    SEMI  shift, and go to state 85


State 63

   37 STATMENT: IFS .

    $default  reduce using rule 37 (STATMENT)


State 64

   38 STATMENT: LOOPS .

    $default  reduce using rule 38 (STATMENT)


State 65

   47 ASSIGNMENT_VAR: id .
   48               | id . OSQRERACKET EXPR CSQRERACKET
   49 FUNC_CALL: id . OBRACKET EXPR_LIST CBRACKET
   50          | id . OBRACKET CBRACKET

    OBRACKET     shift, and go to state 86
    OSQRERACKET  shift, and go to state 87

    $default  reduce using rule 47 (ASSIGNMENT_VAR)


State 66

    9 DECLERATIONS: VAR_DECLERACTION STATMENTS . DECLERATIONS

    STRING  shift, and go to state 23
    VAR     shift, and go to state 41
    FUNC    shift, and go to state 1

    $default  reduce using rule 10 (DECLERATIONS)

    FUNCTION          go to state 42
    DECLERATIONS      go to state 88
    VAR_DECLERACTION  go to state 45
    string            go to state 46


State 67

   17 VAR_DECLERACTION: string SID . SEMI

    SEMI  shift, and go to state 89


State 68

   21 SID: id . OSQRERACKET EXPR CSQRERACKET STRING_ASSIGNMENT COMMA SID
   22    | id . OSQRERACKET EXPR CSQRERACKET STRING_ASSIGNMENT

    OSQRERACKET  shift, and go to state 90


State 69

   16 VAR_DECLERACTION: VAR TYPE IDS . SEMI

    SEMI  shift, and go to state 91


State 70

   18 VAR_DECLERACTION: VAR TYPE ASSIGNMENT .

    $default  reduce using rule 18 (VAR_DECLERACTION)


State 71

   19 IDS: id . COMMA IDS
   20    | id .
   47 ASSIGNMENT_VAR: id .
   48               | id . OSQRERACKET EXPR CSQRERACKET

    COMMA        shift, and go to state 39
    OSQRERACKET  shift, and go to state 87

    ASSIGN    reduce using rule 47 (ASSIGNMENT_VAR)
    $default  reduce using rule 20 (IDS)


State 72

   51 IFS: IF OBRACKET . EXPR CBRACKET CODE_BLOCK
   52    | IF OBRACKET . EXPR CBRACKET CODE_BLOCK ELSE CODE_BLOCK
   53    | IF OBRACKET . EXPR CBRACKET SINGLE_STATMENT
   54    | IF OBRACKET . EXPR CBRACKET CODE_BLOCK ELSE SINGLE_STATMENT

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 109
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 73

   55 LOOPS: WHILE OBRACKET . EXPR CBRACKET CODE_BLOCK
   57      | WHILE OBRACKET . EXPR CBRACKET SINGLE_STATMENT

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 113
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 74

   59 LOOPS: DO CODE_BLOCK . WHILE OBRACKET EXPR CBRACKET SEMI

    WHILE  shift, and go to state 114


State 75

   56 LOOPS: FOR OBRACKET . ASSIGNMENT EXPR SEMI UPDATES CBRACKET CODE_BLOCK
   58      | FOR OBRACKET . ASSIGNMENT EXPR SEMI UPDATES CBRACKET SINGLE_STATMENT

    MULT  shift, and go to state 55
    BAND  shift, and go to state 56
    ID    shift, and go to state 18

    ASSIGNMENT      go to state 115
    ASSIGNMENT_VAR  go to state 61
    id              go to state 77


State 76

   44 ASSIGNMENT: MULT ASSIGNMENT_VAR . assign EXPR SEMI

    ASSIGN  shift, and go to state 83

    assign  go to state 116


State 77

   47 ASSIGNMENT_VAR: id .
   48               | id . OSQRERACKET EXPR CSQRERACKET

    OSQRERACKET  shift, and go to state 87

    $default  reduce using rule 47 (ASSIGNMENT_VAR)


State 78

   42 ASSIGNMENT: BAND ASSIGNMENT_VAR . assign EXPR SEMI

    ASSIGN  shift, and go to state 83

    assign  go to state 117


State 79

   65 RETURN_STATMENT: RRETURN . EXPR SEMI
   66                | RRETURN . SEMI

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    SEMI         shift, and go to state 118
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 119
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 80

    7 BODY: DECLERATIONS STATMENTS RETURN_STATMENT .

    $default  reduce using rule 7 (BODY)


State 81

   32 STATMENTS: STATMENT STATMENTS .

    $default  reduce using rule 32 (STATMENTS)


State 82

   33 STATMENTS: CODE_BLOCK STATMENTS .

    $default  reduce using rule 33 (STATMENTS)


State 83

  101 assign: ASSIGN .

    $default  reduce using rule 101 (assign)


State 84

   41 ASSIGNMENT: ASSIGNMENT_VAR assign . EXPR SEMI
   43           | ASSIGNMENT_VAR assign . BAND id OSQRERACKET EXPR CSQRERACKET SEMI

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 120
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 121
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 85

   36 STATMENT: FUNC_CALL SEMI .

    $default  reduce using rule 36 (STATMENT)


State 86

   49 FUNC_CALL: id OBRACKET . EXPR_LIST CBRACKET
   50          | id OBRACKET . CBRACKET

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106
    CBRACKET     shift, and go to state 122

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR_LIST       go to state 123
    EXPR            go to state 124
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 87

   48 ASSIGNMENT_VAR: id OSQRERACKET . EXPR CSQRERACKET

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 125
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 88

    9 DECLERATIONS: VAR_DECLERACTION STATMENTS DECLERATIONS .

    $default  reduce using rule 9 (DECLERATIONS)


State 89

   17 VAR_DECLERACTION: string SID SEMI .

    $default  reduce using rule 17 (VAR_DECLERACTION)


State 90

   21 SID: id OSQRERACKET . EXPR CSQRERACKET STRING_ASSIGNMENT COMMA SID
   22    | id OSQRERACKET . EXPR CSQRERACKET STRING_ASSIGNMENT

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 126
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 91

   16 VAR_DECLERACTION: VAR TYPE IDS SEMI .

    $default  reduce using rule 16 (VAR_DECLERACTION)


State 92

   92 EXPR: NNULL .

    $default  reduce using rule 92 (EXPR)


State 93

   84 EXPR: MINUS . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 127
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 94

   82 EXPR: NOT . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 128
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 95

   83 EXPR: MULT . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 129
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 96

   85 EXPR: BAND . id

    ID  shift, and go to state 18

    id  go to state 130


State 97

   87 EXPR: BOOL_TRUE .

    $default  reduce using rule 87 (EXPR)


State 98

   88 EXPR: BOOL_FALSE .

    $default  reduce using rule 88 (EXPR)


State 99

  104 char: CHARR .

    $default  reduce using rule 104 (char)


State 100

   96 NUMS: NUM .

    $default  reduce using rule 96 (NUMS)


State 101

   97 NUMS: HEX .

    $default  reduce using rule 97 (NUMS)


State 102

   98 NUMS: DEC .

    $default  reduce using rule 98 (NUMS)


State 103

   99 NUMS: REAL_NUMBER .

    $default  reduce using rule 99 (NUMS)


State 104

  107 string_id: STRING_ID .

    $default  reduce using rule 107 (string_id)


State 105

   91 EXPR: ABS . EXPR ABS

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 131
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 106

   90 EXPR: OBRACKET . EXPR CBRACKET

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 132
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 107

   89 EXPR: ASSIGNMENT_VAR .

    $default  reduce using rule 89 (EXPR)


State 108

   93 EXPR: FUNC_CALL .

    $default  reduce using rule 93 (EXPR)


State 109

   51 IFS: IF OBRACKET EXPR . CBRACKET CODE_BLOCK
   52    | IF OBRACKET EXPR . CBRACKET CODE_BLOCK ELSE CODE_BLOCK
   53    | IF OBRACKET EXPR . CBRACKET SINGLE_STATMENT
   54    | IF OBRACKET EXPR . CBRACKET CODE_BLOCK ELSE SINGLE_STATMENT
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    CBRACKET   shift, and go to state 145


State 110

   86 EXPR: NUMS .

    $default  reduce using rule 86 (EXPR)


State 111

   94 EXPR: char .

    $default  reduce using rule 94 (EXPR)


State 112

   95 EXPR: string_id .

    $default  reduce using rule 95 (EXPR)


State 113

   55 LOOPS: WHILE OBRACKET EXPR . CBRACKET CODE_BLOCK
   57      | WHILE OBRACKET EXPR . CBRACKET SINGLE_STATMENT
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    CBRACKET   shift, and go to state 146


State 114

   59 LOOPS: DO CODE_BLOCK WHILE . OBRACKET EXPR CBRACKET SEMI

    OBRACKET  shift, and go to state 147


State 115

   56 LOOPS: FOR OBRACKET ASSIGNMENT . EXPR SEMI UPDATES CBRACKET CODE_BLOCK
   58      | FOR OBRACKET ASSIGNMENT . EXPR SEMI UPDATES CBRACKET SINGLE_STATMENT

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 148
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 116

   44 ASSIGNMENT: MULT ASSIGNMENT_VAR assign . EXPR SEMI

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 149
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 117

   42 ASSIGNMENT: BAND ASSIGNMENT_VAR assign . EXPR SEMI

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 150
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 118

   66 RETURN_STATMENT: RRETURN SEMI .

    $default  reduce using rule 66 (RETURN_STATMENT)


State 119

   65 RETURN_STATMENT: RRETURN EXPR . SEMI
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    SEMI       shift, and go to state 151


State 120

   43 ASSIGNMENT: ASSIGNMENT_VAR assign BAND . id OSQRERACKET EXPR CSQRERACKET SEMI
   85 EXPR: BAND . id

    ID  shift, and go to state 18

    id  go to state 152


State 121

   41 ASSIGNMENT: ASSIGNMENT_VAR assign EXPR . SEMI
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    SEMI       shift, and go to state 153


State 122

   50 FUNC_CALL: id OBRACKET CBRACKET .

    $default  reduce using rule 50 (FUNC_CALL)


State 123

   49 FUNC_CALL: id OBRACKET EXPR_LIST . CBRACKET
   68 EXPR_LIST: EXPR_LIST . COMMA EXPR

    COMMA     shift, and go to state 154
    CBRACKET  shift, and go to state 155


State 124

   69 EXPR_LIST: EXPR .
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144

    $default  reduce using rule 69 (EXPR_LIST)


State 125

   48 ASSIGNMENT_VAR: id OSQRERACKET EXPR . CSQRERACKET
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND          shift, and go to state 133
    DIVIDE       shift, and go to state 134
    ISEQUAL      shift, and go to state 135
    GREATER      shift, and go to state 136
    GREATEREQ    shift, and go to state 137
    LESS         shift, and go to state 138
    LESSEQ       shift, and go to state 139
    MINUS        shift, and go to state 140
    NOTEQUAL     shift, and go to state 141
    OR           shift, and go to state 142
    PLUS         shift, and go to state 143
    MULT         shift, and go to state 144
    CSQRERACKET  shift, and go to state 156


State 126

   21 SID: id OSQRERACKET EXPR . CSQRERACKET STRING_ASSIGNMENT COMMA SID
   22    | id OSQRERACKET EXPR . CSQRERACKET STRING_ASSIGNMENT
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND          shift, and go to state 133
    DIVIDE       shift, and go to state 134
    ISEQUAL      shift, and go to state 135
    GREATER      shift, and go to state 136
    GREATEREQ    shift, and go to state 137
    LESS         shift, and go to state 138
    LESSEQ       shift, and go to state 139
    MINUS        shift, and go to state 140
    NOTEQUAL     shift, and go to state 141
    OR           shift, and go to state 142
    PLUS         shift, and go to state 143
    MULT         shift, and go to state 144
    CSQRERACKET  shift, and go to state 157


State 127

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR
   84     | MINUS EXPR .

    DIVIDE  shift, and go to state 134
    MULT    shift, and go to state 144

    $default  reduce using rule 84 (EXPR)


State 128

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR
   82     | NOT EXPR .

    $default  reduce using rule 82 (EXPR)


State 129

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR
   83     | MULT EXPR .

    $default  reduce using rule 83 (EXPR)


State 130

   85 EXPR: BAND id .

    $default  reduce using rule 85 (EXPR)


State 131

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR
   91     | ABS EXPR . ABS

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    ABS        shift, and go to state 158


State 132

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR
   90     | OBRACKET EXPR . CBRACKET

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    CBRACKET   shift, and go to state 159


State 133

   74 EXPR: EXPR AND . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 160
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 134

   73 EXPR: EXPR DIVIDE . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 161
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 135

   76 EXPR: EXPR ISEQUAL . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 162
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 136

   78 EXPR: EXPR GREATER . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 163
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 137

   79 EXPR: EXPR GREATEREQ . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 164
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 138

   80 EXPR: EXPR LESS . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 165
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 139

   81 EXPR: EXPR LESSEQ . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 166
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 140

   71 EXPR: EXPR MINUS . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 167
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 141

   77 EXPR: EXPR NOTEQUAL . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 168
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 142

   75 EXPR: EXPR OR . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 169
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 143

   70 EXPR: EXPR PLUS . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 170
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 144

   72 EXPR: EXPR MULT . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 171
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 145

   51 IFS: IF OBRACKET EXPR CBRACKET . CODE_BLOCK
   52    | IF OBRACKET EXPR CBRACKET . CODE_BLOCK ELSE CODE_BLOCK
   53    | IF OBRACKET EXPR CBRACKET . SINGLE_STATMENT
   54    | IF OBRACKET EXPR CBRACKET . CODE_BLOCK ELSE SINGLE_STATMENT

    IF      shift, and go to state 51
    WHILE   shift, and go to state 52
    DO      shift, and go to state 53
    FOR     shift, and go to state 54
    MULT    shift, and go to state 55
    BAND    shift, and go to state 56
    ID      shift, and go to state 18
    OBRACE  shift, and go to state 36

    STATMENT         go to state 172
    CODE_BLOCK       go to state 173
    SINGLE_STATMENT  go to state 174
    ASSIGNMENT       go to state 60
    ASSIGNMENT_VAR   go to state 61
    FUNC_CALL        go to state 62
    IFS              go to state 63
    LOOPS            go to state 64
    id               go to state 65


State 146

   55 LOOPS: WHILE OBRACKET EXPR CBRACKET . CODE_BLOCK
   57      | WHILE OBRACKET EXPR CBRACKET . SINGLE_STATMENT

    IF      shift, and go to state 51
    WHILE   shift, and go to state 52
    DO      shift, and go to state 53
    FOR     shift, and go to state 54
    MULT    shift, and go to state 55
    BAND    shift, and go to state 56
    ID      shift, and go to state 18
    OBRACE  shift, and go to state 36

    STATMENT         go to state 172
    CODE_BLOCK       go to state 175
    SINGLE_STATMENT  go to state 176
    ASSIGNMENT       go to state 60
    ASSIGNMENT_VAR   go to state 61
    FUNC_CALL        go to state 62
    IFS              go to state 63
    LOOPS            go to state 64
    id               go to state 65


State 147

   59 LOOPS: DO CODE_BLOCK WHILE OBRACKET . EXPR CBRACKET SEMI

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 177
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 148

   56 LOOPS: FOR OBRACKET ASSIGNMENT EXPR . SEMI UPDATES CBRACKET CODE_BLOCK
   58      | FOR OBRACKET ASSIGNMENT EXPR . SEMI UPDATES CBRACKET SINGLE_STATMENT
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    SEMI       shift, and go to state 178


State 149

   44 ASSIGNMENT: MULT ASSIGNMENT_VAR assign EXPR . SEMI
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    SEMI       shift, and go to state 179


State 150

   42 ASSIGNMENT: BAND ASSIGNMENT_VAR assign EXPR . SEMI
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    SEMI       shift, and go to state 180


State 151

   65 RETURN_STATMENT: RRETURN EXPR SEMI .

    $default  reduce using rule 65 (RETURN_STATMENT)


State 152

   43 ASSIGNMENT: ASSIGNMENT_VAR assign BAND id . OSQRERACKET EXPR CSQRERACKET SEMI
   85 EXPR: BAND id .

    OSQRERACKET  shift, and go to state 181

    $default  reduce using rule 85 (EXPR)


State 153

   41 ASSIGNMENT: ASSIGNMENT_VAR assign EXPR SEMI .

    $default  reduce using rule 41 (ASSIGNMENT)


State 154

   68 EXPR_LIST: EXPR_LIST COMMA . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 182
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 155

   49 FUNC_CALL: id OBRACKET EXPR_LIST CBRACKET .

    $default  reduce using rule 49 (FUNC_CALL)


State 156

   48 ASSIGNMENT_VAR: id OSQRERACKET EXPR CSQRERACKET .

    $default  reduce using rule 48 (ASSIGNMENT_VAR)


State 157

   21 SID: id OSQRERACKET EXPR CSQRERACKET . STRING_ASSIGNMENT COMMA SID
   22    | id OSQRERACKET EXPR CSQRERACKET . STRING_ASSIGNMENT

    ASSIGN  shift, and go to state 83

    $default  reduce using rule 46 (STRING_ASSIGNMENT)

    STRING_ASSIGNMENT  go to state 183
    assign             go to state 184


State 158

   91 EXPR: ABS EXPR ABS .

    $default  reduce using rule 91 (EXPR)


State 159

   90 EXPR: OBRACKET EXPR CBRACKET .

    $default  reduce using rule 90 (EXPR)


State 160

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   74     | EXPR AND EXPR .
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144

    $default  reduce using rule 74 (EXPR)


State 161

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   73     | EXPR DIVIDE EXPR .
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    $default  reduce using rule 73 (EXPR)


State 162

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   76     | EXPR ISEQUAL EXPR .
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    DIVIDE  shift, and go to state 134
    MINUS   shift, and go to state 140
    PLUS    shift, and go to state 143
    MULT    shift, and go to state 144

    $default  reduce using rule 76 (EXPR)


State 163

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   78     | EXPR GREATER EXPR .
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    DIVIDE  shift, and go to state 134
    MINUS   shift, and go to state 140
    PLUS    shift, and go to state 143
    MULT    shift, and go to state 144

    $default  reduce using rule 78 (EXPR)


State 164

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   79     | EXPR GREATEREQ EXPR .
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    DIVIDE  shift, and go to state 134
    MINUS   shift, and go to state 140
    PLUS    shift, and go to state 143
    MULT    shift, and go to state 144

    $default  reduce using rule 79 (EXPR)


State 165

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   80     | EXPR LESS EXPR .
   81     | EXPR . LESSEQ EXPR

    DIVIDE  shift, and go to state 134
    MINUS   shift, and go to state 140
    PLUS    shift, and go to state 143
    MULT    shift, and go to state 144

    $default  reduce using rule 80 (EXPR)


State 166

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR
   81     | EXPR LESSEQ EXPR .

    DIVIDE  shift, and go to state 134
    MINUS   shift, and go to state 140
    PLUS    shift, and go to state 143
    MULT    shift, and go to state 144

    $default  reduce using rule 81 (EXPR)


State 167

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   71     | EXPR MINUS EXPR .
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    DIVIDE  shift, and go to state 134
    MULT    shift, and go to state 144

    $default  reduce using rule 71 (EXPR)


State 168

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   77     | EXPR NOTEQUAL EXPR .
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    DIVIDE  shift, and go to state 134
    MINUS   shift, and go to state 140
    PLUS    shift, and go to state 143
    MULT    shift, and go to state 144

    $default  reduce using rule 77 (EXPR)


State 169

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   75     | EXPR OR EXPR .
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144

    $default  reduce using rule 75 (EXPR)


State 170

   70 EXPR: EXPR . PLUS EXPR
   70     | EXPR PLUS EXPR .
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    DIVIDE  shift, and go to state 134
    MULT    shift, and go to state 144

    $default  reduce using rule 70 (EXPR)


State 171

   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   72     | EXPR MULT EXPR .
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    $default  reduce using rule 72 (EXPR)


State 172

   40 SINGLE_STATMENT: STATMENT .

    $default  reduce using rule 40 (SINGLE_STATMENT)


State 173

   51 IFS: IF OBRACKET EXPR CBRACKET CODE_BLOCK .
   52    | IF OBRACKET EXPR CBRACKET CODE_BLOCK . ELSE CODE_BLOCK
   54    | IF OBRACKET EXPR CBRACKET CODE_BLOCK . ELSE SINGLE_STATMENT

    ELSE  shift, and go to state 185

    $default  reduce using rule 51 (IFS)


State 174

   53 IFS: IF OBRACKET EXPR CBRACKET SINGLE_STATMENT .

    $default  reduce using rule 53 (IFS)


State 175

   55 LOOPS: WHILE OBRACKET EXPR CBRACKET CODE_BLOCK .

    $default  reduce using rule 55 (LOOPS)


State 176

   57 LOOPS: WHILE OBRACKET EXPR CBRACKET SINGLE_STATMENT .

    $default  reduce using rule 57 (LOOPS)


State 177

   59 LOOPS: DO CODE_BLOCK WHILE OBRACKET EXPR . CBRACKET SEMI
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144
    CBRACKET   shift, and go to state 186


State 178

   56 LOOPS: FOR OBRACKET ASSIGNMENT EXPR SEMI . UPDATES CBRACKET CODE_BLOCK
   58      | FOR OBRACKET ASSIGNMENT EXPR SEMI . UPDATES CBRACKET SINGLE_STATMENT

    MINUS  shift, and go to state 187
    PLUS   shift, and go to state 188
    ID     shift, and go to state 18

    UPDATES  go to state 189
    id       go to state 190
    plus     go to state 191
    minus    go to state 192


State 179

   44 ASSIGNMENT: MULT ASSIGNMENT_VAR assign EXPR SEMI .

    $default  reduce using rule 44 (ASSIGNMENT)


State 180

   42 ASSIGNMENT: BAND ASSIGNMENT_VAR assign EXPR SEMI .

    $default  reduce using rule 42 (ASSIGNMENT)


State 181

   43 ASSIGNMENT: ASSIGNMENT_VAR assign BAND id OSQRERACKET . EXPR CSQRERACKET SEMI

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 193
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 182

   68 EXPR_LIST: EXPR_LIST COMMA EXPR .
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144

    $default  reduce using rule 68 (EXPR_LIST)


State 183

   21 SID: id OSQRERACKET EXPR CSQRERACKET STRING_ASSIGNMENT . COMMA SID
   22    | id OSQRERACKET EXPR CSQRERACKET STRING_ASSIGNMENT .

    COMMA  shift, and go to state 194

    $default  reduce using rule 22 (SID)


State 184

   45 STRING_ASSIGNMENT: assign . string_id

    STRING_ID  shift, and go to state 104

    string_id  go to state 195


State 185

   52 IFS: IF OBRACKET EXPR CBRACKET CODE_BLOCK ELSE . CODE_BLOCK
   54    | IF OBRACKET EXPR CBRACKET CODE_BLOCK ELSE . SINGLE_STATMENT

    IF      shift, and go to state 51
    WHILE   shift, and go to state 52
    DO      shift, and go to state 53
    FOR     shift, and go to state 54
    MULT    shift, and go to state 55
    BAND    shift, and go to state 56
    ID      shift, and go to state 18
    OBRACE  shift, and go to state 36

    STATMENT         go to state 172
    CODE_BLOCK       go to state 196
    SINGLE_STATMENT  go to state 197
    ASSIGNMENT       go to state 60
    ASSIGNMENT_VAR   go to state 61
    FUNC_CALL        go to state 62
    IFS              go to state 63
    LOOPS            go to state 64
    id               go to state 65


State 186

   59 LOOPS: DO CODE_BLOCK WHILE OBRACKET EXPR CBRACKET . SEMI

    SEMI  shift, and go to state 198


State 187

  103 minus: MINUS .

    $default  reduce using rule 103 (minus)


State 188

  102 plus: PLUS .

    $default  reduce using rule 102 (plus)


State 189

   56 LOOPS: FOR OBRACKET ASSIGNMENT EXPR SEMI UPDATES . CBRACKET CODE_BLOCK
   58      | FOR OBRACKET ASSIGNMENT EXPR SEMI UPDATES . CBRACKET SINGLE_STATMENT

    CBRACKET  shift, and go to state 199


State 190

   60 UPDATES: id . plus plus
   62        | id . minus minus
   64        | id . assign EXPR

    ASSIGN  shift, and go to state 83
    MINUS   shift, and go to state 187
    PLUS    shift, and go to state 188

    assign  go to state 200
    plus    go to state 201
    minus   go to state 202


State 191

   61 UPDATES: plus . plus id

    PLUS  shift, and go to state 188

    plus  go to state 203


State 192

   63 UPDATES: minus . minus id

    MINUS  shift, and go to state 187

    minus  go to state 204


State 193

   43 ASSIGNMENT: ASSIGNMENT_VAR assign BAND id OSQRERACKET EXPR . CSQRERACKET SEMI
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND          shift, and go to state 133
    DIVIDE       shift, and go to state 134
    ISEQUAL      shift, and go to state 135
    GREATER      shift, and go to state 136
    GREATEREQ    shift, and go to state 137
    LESS         shift, and go to state 138
    LESSEQ       shift, and go to state 139
    MINUS        shift, and go to state 140
    NOTEQUAL     shift, and go to state 141
    OR           shift, and go to state 142
    PLUS         shift, and go to state 143
    MULT         shift, and go to state 144
    CSQRERACKET  shift, and go to state 205


State 194

   21 SID: id OSQRERACKET EXPR CSQRERACKET STRING_ASSIGNMENT COMMA . SID

    ID  shift, and go to state 18

    SID  go to state 206
    id   go to state 68


State 195

   45 STRING_ASSIGNMENT: assign string_id .

    $default  reduce using rule 45 (STRING_ASSIGNMENT)


State 196

   52 IFS: IF OBRACKET EXPR CBRACKET CODE_BLOCK ELSE CODE_BLOCK .

    $default  reduce using rule 52 (IFS)


State 197

   54 IFS: IF OBRACKET EXPR CBRACKET CODE_BLOCK ELSE SINGLE_STATMENT .

    $default  reduce using rule 54 (IFS)


State 198

   59 LOOPS: DO CODE_BLOCK WHILE OBRACKET EXPR CBRACKET SEMI .

    $default  reduce using rule 59 (LOOPS)


State 199

   56 LOOPS: FOR OBRACKET ASSIGNMENT EXPR SEMI UPDATES CBRACKET . CODE_BLOCK
   58      | FOR OBRACKET ASSIGNMENT EXPR SEMI UPDATES CBRACKET . SINGLE_STATMENT

    IF      shift, and go to state 51
    WHILE   shift, and go to state 52
    DO      shift, and go to state 53
    FOR     shift, and go to state 54
    MULT    shift, and go to state 55
    BAND    shift, and go to state 56
    ID      shift, and go to state 18
    OBRACE  shift, and go to state 36

    STATMENT         go to state 172
    CODE_BLOCK       go to state 207
    SINGLE_STATMENT  go to state 208
    ASSIGNMENT       go to state 60
    ASSIGNMENT_VAR   go to state 61
    FUNC_CALL        go to state 62
    IFS              go to state 63
    LOOPS            go to state 64
    id               go to state 65


State 200

   64 UPDATES: id assign . EXPR

    NNULL        shift, and go to state 92
    MINUS        shift, and go to state 93
    NOT          shift, and go to state 94
    MULT         shift, and go to state 95
    BAND         shift, and go to state 96
    BOOL_TRUE    shift, and go to state 97
    BOOL_FALSE   shift, and go to state 98
    CHARR        shift, and go to state 99
    NUM          shift, and go to state 100
    ID           shift, and go to state 18
    HEX          shift, and go to state 101
    DEC          shift, and go to state 102
    REAL_NUMBER  shift, and go to state 103
    STRING_ID    shift, and go to state 104
    ABS          shift, and go to state 105
    OBRACKET     shift, and go to state 106

    ASSIGNMENT_VAR  go to state 107
    FUNC_CALL       go to state 108
    EXPR            go to state 209
    NUMS            go to state 110
    id              go to state 65
    char            go to state 111
    string_id       go to state 112


State 201

   60 UPDATES: id plus . plus

    PLUS  shift, and go to state 188

    plus  go to state 210


State 202

   62 UPDATES: id minus . minus

    MINUS  shift, and go to state 187

    minus  go to state 211


State 203

   61 UPDATES: plus plus . id

    ID  shift, and go to state 18

    id  go to state 212


State 204

   63 UPDATES: minus minus . id

    ID  shift, and go to state 18

    id  go to state 213


State 205

   43 ASSIGNMENT: ASSIGNMENT_VAR assign BAND id OSQRERACKET EXPR CSQRERACKET . SEMI

    SEMI  shift, and go to state 214


State 206

   21 SID: id OSQRERACKET EXPR CSQRERACKET STRING_ASSIGNMENT COMMA SID .

    $default  reduce using rule 21 (SID)


State 207

   56 LOOPS: FOR OBRACKET ASSIGNMENT EXPR SEMI UPDATES CBRACKET CODE_BLOCK .

    $default  reduce using rule 56 (LOOPS)


State 208

   58 LOOPS: FOR OBRACKET ASSIGNMENT EXPR SEMI UPDATES CBRACKET SINGLE_STATMENT .

    $default  reduce using rule 58 (LOOPS)


State 209

   64 UPDATES: id assign EXPR .
   70 EXPR: EXPR . PLUS EXPR
   71     | EXPR . MINUS EXPR
   72     | EXPR . MULT EXPR
   73     | EXPR . DIVIDE EXPR
   74     | EXPR . AND EXPR
   75     | EXPR . OR EXPR
   76     | EXPR . ISEQUAL EXPR
   77     | EXPR . NOTEQUAL EXPR
   78     | EXPR . GREATER EXPR
   79     | EXPR . GREATEREQ EXPR
   80     | EXPR . LESS EXPR
   81     | EXPR . LESSEQ EXPR

    AND        shift, and go to state 133
    DIVIDE     shift, and go to state 134
    ISEQUAL    shift, and go to state 135
    GREATER    shift, and go to state 136
    GREATEREQ  shift, and go to state 137
    LESS       shift, and go to state 138
    LESSEQ     shift, and go to state 139
    MINUS      shift, and go to state 140
    NOTEQUAL   shift, and go to state 141
    OR         shift, and go to state 142
    PLUS       shift, and go to state 143
    MULT       shift, and go to state 144

    $default  reduce using rule 64 (UPDATES)


State 210

   60 UPDATES: id plus plus .

    $default  reduce using rule 60 (UPDATES)


State 211

   62 UPDATES: id minus minus .

    $default  reduce using rule 62 (UPDATES)


State 212

   61 UPDATES: plus plus id .

    $default  reduce using rule 61 (UPDATES)


State 213

   63 UPDATES: minus minus id .

    $default  reduce using rule 63 (UPDATES)


State 214

   43 ASSIGNMENT: ASSIGNMENT_VAR assign BAND id OSQRERACKET EXPR CSQRERACKET SEMI .

    $default  reduce using rule 43 (ASSIGNMENT)
